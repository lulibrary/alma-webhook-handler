# Welcome to Serverless!
#
# Happy Coding!

service: lag-awh

provider:
  name: aws
  runtime: nodejs6.10
  region: ${opt:region}
  stage: ${opt:stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sns:Publish
      Resource:
        - ${self:custom.topicArns.loanCreated}

functions:
  challenge:
    handler: src/challenge-handler/handler.handleChallengeEvent
    events:
      - http:
          path: ''
          method: get
    tags:
      serverless: true
      environment: ${self:custom.environmentNames.${opt:stage}}
      service: library-api-gateway
      sub-service: webhook-handler
  webhook:
    handler: src/webhook-handler/handler.handleWebhookEvent
    events:
      - http:
          path: ''
          method: post
    environment:
      ALMA_SECRET_KEY_NAME: /library-api-gateway/webhook-handler/shared-secret
      LoanCreatedTopicArn: ${self:custom.topicArns.loanCreated}
    role: webhookHandlerRole
    tags:
      serverless: true
      environment: ${self:custom.environmentNames.${opt:stage}}
      service: library-api-gateway
      sub-service: webhook-handler

resources:
  Resources:
    webhookHandlerRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: ${self:service}-${opt:stage}-AllowGetSSMParameters-Policy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                Effect: Allow
                Action: 
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:GetParametersByPath
                Resource: arn:aws:ssm:eu-west-2:#{AWS::AccountId}:parameter/library-api-gateway/webhook-handler/*
          - PolicyName: ${self:service}-${opt:stage}-AllowKMSKeyAccess-Policy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                Effect: Allow
                Action:
                  - kms:GenerateDataKey
                  - kms:Encrypt
                  - kms:Decrypt
                Resource: ${self:custom.KeyArns.${opt:stage}}
    loanCreatedTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: AlmaLoanCreated
  Outputs:
    LoanCreatedTopicArn:
      Description: Arn for Loan Created Topic
      Value: ${self:custom.topicArns.loanCreated}
      Export:
        Name: ${self:service}:${opt:stage}:LoanCreatedTopicArn

custom:
  KeyArns:
    dev: ${env:KEY_ARN_DEV}
    stg: ${env:KEY_ARN_STG}
    prod: ${env:KEY_ARN_PROD}
  environmentNames:
    dev: development
    stg: staging
    prod: production
  topicArns:
    loanCreated:
      "Fn::Join": 
          - ":"
          - - "arn:aws:sns"
            - Ref: "AWS::Region"
            - Ref: "AWS::AccountId"
            - "Fn::GetAtt": [loanCreatedTopic, TopicName]

plugins:
  - serverless-pseudo-parameters
              
      
